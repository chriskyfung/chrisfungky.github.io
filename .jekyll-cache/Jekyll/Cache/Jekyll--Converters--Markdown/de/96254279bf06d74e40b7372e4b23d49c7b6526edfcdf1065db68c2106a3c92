I"M<p>Sometimes I use MATLAB scripts to analyze Twitter posts. One issue is that Twitter uses shorten URLs started with <code class="highlighter-rouge">t.co</code> for the links, such as retweets. To get the original URL, we need to determine the final redirected endpoint by using an URL expander.</p>

<!--more-->

<h2 id="method">Method</h2>

<h3 id="the-api-for-getting-expanded-or-redirected-url">The API for getting expanded or redirected URL</h3>

<p>The shorten URLs can be restored by using an online URL expander, called <a href="http://expandurl.com/api.php">expandurl™ API</a>. The REST endpoint URL is</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://expandurl.com/api/v1/
</code></pre></div></div>

<p>The query string to get the JSON response looks like:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>?url<span class="o">={</span>TARGET_URL<span class="o">}</span>&amp;format<span class="o">=</span>json&amp;detailed<span class="o">=</span><span class="nb">true</span>
</code></pre></div></div>

<p>A GET request should in the form of:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://expandurl.com/api/v1/?url<span class="o">={</span>TARGET_URL<span class="o">}</span>&amp;format<span class="o">=</span>json&amp;detailed<span class="o">=</span><span class="nb">true</span>
</code></pre></div></div>

<p>where <code class="highlighter-rouge">{TARGET_URL}</code> is the URL to be expanded.</p>

<p>It will return a response in the JSON format look like:</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"url"</span><span class="p">:</span><span class="s2">"{TARGET_URL}"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"http_code"</span><span class="p">:</span><span class="mi">200</span><span class="p">,</span><span class="w">
    </span><span class="nl">"redirect_count"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="w">
    </span><span class="nl">"total_time"</span><span class="p">:</span><span class="mf">32.04</span><span class="p">,</span><span class="w">
    </span><span class="nl">"redirect_time"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="w">
    </span><span class="nl">"rel_meta_refresh"</span><span class="p">:[{</span><span class="w">
        </span><span class="nl">"url"</span><span class="p">:</span><span class="s2">"{REDIRECTED_URL}"</span><span class="p">,</span><span class="nl">"time"</span><span class="p">:</span><span class="s2">"0"</span><span class="w">
       </span><span class="p">}],</span><span class="w">
    </span><span class="nl">"original_url"</span><span class="p">:</span><span class="s2">"{TARGET_URL}"</span><span class="p">,</span><span class="nl">"error_msg"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="w">
    </span><span class="nl">"rel_canonical"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"rel_shortlink"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"advanced_redirect"</span><span class="p">:</span><span class="kc">false</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>The <code class="highlighter-rouge">{REDIRECTED_URL}</code> will be the URL of the final destination, which is what we interest to. To extract it, we can use Regular Expressions or a JSON parser to read data from the JSON response.</p>

<h3 id="sending-get-request-to-the-rest-api">Sending GET request to the REST API</h3>

<p>In MATLAB, we can use <a href="https://www.mathworks.com/help/matlab/ref/urlread.html"><code class="highlighter-rouge">urlread</code></a> to download URL content. You can also use <a href="https://www.mathworks.com/help/matlab/ref/webread.html"><code class="highlighter-rouge">webread</code></a> to read content from RESTful web service if you use MATLAB 2014b or above. To send a request to the expandurl™ API, we can write a script like that:</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">targetTweetUrl</span> <span class="o">=</span> <span class="s1">'https://t.co/&lt;ShortenTweetID&gt;'</span><span class="p">;</span>

<span class="n">apiEndpoint</span> <span class="o">=</span> <span class="s1">'http://expandurl.com/api/v1/'</span><span class="p">;</span>
<span class="n">query</span> <span class="o">=</span> <span class="s1">'?url={TARGET_URL}&amp;format=json&amp;detailed=true'</span><span class="p">;</span>

<span class="n">fullUrl</span> <span class="o">=</span> <span class="p">[</span><span class="n">apiEndpoint</span> <span class="nb">replace</span><span class="p">(</span><span class="n">query</span><span class="p">,</span> <span class="s1">'{TARGET_URL}'</span><span class="p">,</span> <span class="n">targetTweetUrl</span><span class="p">)];</span>

<span class="n">response</span> <span class="o">=</span> <span class="nb">urlread</span><span class="p">(</span><span class="n">fullURL</span><span class="p">);</span>
</code></pre></div></div>

<h3 id="receiving-data-from-the-api-response">Receiving data from the API response</h3>

<p>For MATLAB/Octave, you can download <a href="https://www.mathworks.com/matlabcentral/fileexchange/33381-jsonlab-a-toolbox-to-encode-decode-json-files">JSONlab: a toolbox to encode/decode JSON files</a> by <a href="https://www.mathworks.com/matlabcentral/profile/authors/1583198-qianqian-fang">Qianqian Fang</a> from the <strong>File Exchange</strong> in <strong>MATLAB Central</strong>. The function to convert a JSON String to a MATLAB Struct is called <code class="highlighter-rouge">loadjson</code>. We can run the following script to get the expanded URL,</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">json</span> <span class="o">=</span> <span class="n">loadjson</span><span class="p">(</span><span class="n">response</span><span class="p">);</span>
<span class="n">redirectUrl</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">rel_meta_refresh</span><span class="o">.</span><span class="n">url</span><span class="p">;</span>
</code></pre></div></div>

<p><em><strong>Note</strong>: You have to sign up a free MathWorks Account if you don’t have one</em>.</p>

<p>Alternatively, you can extract the required parts by string trimming, the code is shown below.</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">substr</span> <span class="o">=</span> <span class="nb">strsplit</span><span class="p">(</span><span class="n">resonse</span><span class="p">,</span> <span class="p">{</span> <span class="s1">'"url":"'</span><span class="p">,</span> <span class="s1">',"time":'</span> <span class="p">});</span>
<span class="n">redirectUrl</span> <span class="o">=</span> <span class="n">substr</span><span class="p">{</span><span class="mi">2</span><span class="p">};</span>
</code></pre></div></div>

<hr />

<p><strong>Related:</strong></p>

<ul>
  <li>
    <p><a href="/blog/matlab/Working-MATLAB-with-MS-Excel">Working MATLAB with MS Excel</a></p>
  </li>
  <li>
    <p><a href="/blog/matlab/Convert-MATLAB-Matrix-to-MS-Office-Equation">Matrix Conversion between MATLAB and Microsoft Equation Editor</a></p>
  </li>
</ul>
:ET