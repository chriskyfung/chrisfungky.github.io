I"ò<p>OVITO 2.6.0 allows users to program their own modifier in Python. Here provides a template including the common headers and a for-loop for per-particle assignmeet.</p>

<!--more-->

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Import OVITO modules. 
</span>
<span class="kn">from</span> <span class="nn">ovito.io</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">from</span> <span class="nn">ovito.modifiers</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">from</span> <span class="nn">ovito.data</span> <span class="kn">import</span> <span class="o">*</span>

<span class="c1"># Import system and NumPy libraries
</span><span class="kn">import</span> <span class="nn">sys</span>
<span class="kn">import</span> <span class="nn">numpy</span>

<span class="c1"># Define your own modifier
</span><span class="k">def</span> <span class="nf">modify</span><span class="p">(</span><span class="n">frame</span><span class="p">,</span> <span class="nb">input</span><span class="p">,</span> <span class="n">output</span><span class="p">):</span>

<span class="k">print</span><span class="p">(</span><span class="s">"The input contains %i particles."</span> <span class="o">%</span> <span class="nb">input</span><span class="p">.</span><span class="n">number_of_particles</span><span class="p">)</span>

<span class="c1"># Loop over particles and print their number of bonds.
</span><span class="k">for</span> <span class="n">particle_index</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">output</span><span class="p">.</span><span class="n">number_of_particles</span><span class="p">):</span>
    <span class="c1"># Print particle index (1-based).
</span>    <span class="n">sys</span><span class="p">.</span><span class="n">stdout</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="s">"%i "</span> <span class="o">%</span> <span class="p">(</span><span class="n">particle_index</span><span class="o">+</span><span class="mi">1</span><span class="p">))</span>
    
    <span class="n">value1</span> <span class="o">=</span> <span class="o">&lt;</span><span class="n">your</span> <span class="n">calculations</span><span class="o">&gt;</span>
    
    <span class="n">output</span><span class="p">.</span><span class="n">particle_proporties</span><span class="p">.[</span><span class="s">'&lt;key&gt;'</span><span class="p">].</span><span class="n">marray</span><span class="p">[</span><span class="n">particle_index</span><span class="p">]</span> <span class="o">=</span> <span class="n">value1</span>
    <span class="n">output</span><span class="p">.</span><span class="n">particle_proporties</span><span class="p">.[</span><span class="s">'&lt;key&gt;'</span><span class="p">].</span><span class="n">changed</span><span class="p">()</span>
    
    <span class="c1"># End of particle line
</span>
        <span class="n">sys</span><span class="p">.</span><span class="n">stdout</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>
</code></pre></div></div>
:ET