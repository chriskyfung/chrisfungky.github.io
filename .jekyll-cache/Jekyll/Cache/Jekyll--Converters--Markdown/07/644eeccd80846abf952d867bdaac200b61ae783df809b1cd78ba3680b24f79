I"ß:<p><strong>gcloud</strong> is the primary CLI tool for the Google Cloud Platform. You can find a shortlist of the frequently used commands below. There are also some examples of <strong>gsutil</strong> and <strong>terraform</strong> command-line tools. Mastering them helps you to script and automate many GCP operations.</p>

<!--more-->

<h2 id="install-gcloud-command-line-tool">Install gcloud command-line tool</h2>

<p><strong>For Linux</strong></p>

<p>Visit https://cloud.google.com/sdk/docs/#linux to obtain the download link of Google Cloud SDK and download the latest package. Unzip the file, and run these commands:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./google-cloud-sdk/install.sh
./google-cloud-sdk/bin/gcloud init
</code></pre></div></div>

<p><strong>For Debian / Ubuntu</strong></p>

<p>Follow the instruction below to install the Cloud SDK:</p>

<ol>
  <li>Add the Cloud SDK distribution URI as a package source:</li>
</ol>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo</span> <span class="s2">"deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main"</span> | <span class="nb">sudo tee</span> <span class="nt">-a</span> /etc/apt/sources.list.d/google-cloud-sdk.list

<span class="nb">sudo </span>apt-get <span class="nb">install </span>apt-transport-https ca-certificates

curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | <span class="nb">sudo </span>apt-key <span class="nt">--keyring</span> /usr/share/keyrings/cloud.google.gpg add -
</code></pre></div></div>

<ol>
  <li>Update and install the Cloud SDK:</li>
</ol>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt-get update <span class="o">&amp;&amp;</span> <span class="nb">sudo </span>apt-get <span class="nb">install </span>google-cloud-sdk

gcloud init
</code></pre></div></div>

<hr />

<h2 id="the-gcloud-commands-cheat-sheet">The <code class="highlighter-rouge">gcloud</code> Commands Cheat Sheet</h2>

<h3 id="find-the-project-id">Find the Project ID</h3>

<p>The most frequently <code class="highlighter-rouge">gcloud</code> command I used in Google Cloud Shells is to set the project ID as an environment variable with the Linux export command:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">PROJECT_ID</span><span class="o">=</span><span class="si">$(</span>gcloud info <span class="nt">--format</span><span class="o">=</span><span class="s1">'value(config.project)'</span><span class="si">)</span>

<span class="nb">echo</span> <span class="nv">$PROJECT_ID</span>
</code></pre></div></div>

<p>There are so many situations that use the project ID as a parameter. This keeps your codes much tiny and secure by using the environment variable.</p>

<p>For example, the project ID is often used as the namespace of the bucket names in Google Cloud Storage:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">BUCKET</span><span class="o">=</span><span class="k">${</span><span class="nv">PROJECT_ID</span><span class="k">}</span>

gsutil mb gs://<span class="k">${</span><span class="nv">BUCKET</span><span class="k">}</span>
</code></pre></div></div>

<p>Every bucket name must be unique across the entire Google Cloud Storage. Using the project ID as prefix or suffix is a good practice for uniqueness and consistency of the bucket names.</p>

<h3 id="extract-a-value-from-a-json-output-of-a-gcloud-command">Extract a value from a JSON output of a <strong>gcloud</strong> command</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gcloud compute ... <span class="nt">--format</span><span class="o">=</span>json | jq <span class="nt">-r</span> <span class="s1">'&lt;key&gt;'</span><span class="o">)</span>
</code></pre></div></div>

<p><code class="highlighter-rouge">jq</code> is a lightweight and flexible command-line JSON processor. With the <code class="highlighter-rouge">-r</code> option, it outputs raw strings, not JSON texts. Use <code class="highlighter-rouge">jq --help</code> to show the help, or visit <a href="https://stedolan.github.io/jq/">its official site</a> for more details.</p>

<h3 id="find-the-service-account-for-compute-engine-api">Find the Service Account for Compute Engine API</h3>

<p>Besides the project ID, a service account email is required for several command-line tools, like creating a VM instance to GCE. You can extract the service account for the Compute Engine API using the following code:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">SERVICE_ACCOUNT</span><span class="o">=</span><span class="si">$(</span>gcloud <span class="nt">--project</span><span class="o">=</span><span class="nv">$PROJECT_ID</span> <span class="se">\</span>
    iam service-accounts list <span class="nt">--format</span><span class="o">=</span>json | jq <span class="nt">-r</span> <span class="s1">'.[] | select \
    (.displayName=="Compute Engine default service account").email'</span><span class="si">)</span>

<span class="nb">echo</span> <span class="nv">$SERVICE_ACCOUNT</span>
</code></pre></div></div>

<h3 id="find-the-used-ip-address">Find the used IP address</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">USED_IP_ADDRESS</span><span class="o">=</span><span class="si">$(</span>gcloud compute addresses describe <span class="nv">$USED_IP</span> <span class="se">\</span>
    <span class="nt">--region</span><span class="o">=</span>us-central1 <span class="nt">--format</span><span class="o">=</span>json | jq <span class="nt">-r</span> <span class="s1">'.address'</span><span class="si">)</span>

<span class="nb">echo</span> <span class="nv">$USED_IP_ADDRESS</span>
</code></pre></div></div>

<h3 id="change-default-zone">Change default zone</h3>

<p>To set a default zone to use when working with zonal Compute Engine resources, such as us-west1-b, run:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gcloud config <span class="nb">set </span>compute/zone us-west1-b
</code></pre></div></div>

<p>To list all zones in a project in table form, run:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gcloud compute zones list
</code></pre></div></div>

<p>For more details, please read https://cloud.google.com/sdk/gcloud/reference/compute/zones/list .</p>

<h3 id="shh-into-a-compute-engine-server">SHH into a Compute Engine server</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gcloud compute ssh user@your-server-name-1-vm
</code></pre></div></div>

<p><em>Replace <code class="highlighter-rouge">user</code> and <code class="highlighter-rouge">your-server-name-1-vm</code> with yours.</em></p>

<h3 id="download-a-folder-from-the-server-through-scp">Download a folder from the server through SCP</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gcloud compute scp <span class="nt">--recurse</span> user@your-server-name-1-vm:/path/to/the/directory/that/you/want/to/download/to/your/local/machine/ ./
</code></pre></div></div>

<p><em>Replace <code class="highlighter-rouge">user</code>, <code class="highlighter-rouge">your-server-name-1-vm</code> and <code class="highlighter-rouge">/path/to/the/directory/that/you/want/to/download/to/your/local/machine/</code> with yours.</em></p>

<h3 id="create-a-new-kubernetes-cluster">Create a new Kubernetes Cluster</h3>

<p>The following command is an example to create a new Kubernetes cluster named <code class="highlighter-rouge">my-cluster</code> with <em>two</em> nodes (<em>N1 standard 1</em>) in the zone <strong>us-central1-f</strong>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gcloud container clusters create my-cluster <span class="se">\</span>
<span class="nt">--num-nodes</span> 2 <span class="se">\</span>
<span class="nt">--machine-type</span> n1-standard-1 <span class="se">\</span>
<span class="nt">--zone</span> us-central1-f
</code></pre></div></div>

<p>You will receive warnings in the output that can be safely ignored. For more details, please read https://cloud.google.com/sdk/gcloud/reference/container/clusters/create .</p>

<hr />

<h2 id="the-gsutil-cheat-sheet">The <code class="highlighter-rouge">gsutil</code> Cheat Sheet</h2>

<p><strong>gsutil</strong> is the command-line Google Storage utilities. Equivalent to <code class="highlighter-rouge">aws s3</code> but for the Google Cloud Platform, it allows you to access Google Cloud Storage from the command line.</p>

<h3 id="create-a-multi-regional-bucket">Create a multi-regional bucket</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gsutil mb <span class="nt">-c</span> multi_regional gs://<span class="k">${</span><span class="nv">BUCKET</span><span class="k">}</span>
</code></pre></div></div>

<h3 id="copy-local-filesdirectory-into-a-gcs-bucket">Copy local file(s)/directory into a GCS bucket</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gsutil <span class="nb">cp</span> &lt;filename&gt; gs://<span class="k">${</span><span class="nv">BUCKET</span><span class="k">}</span>
</code></pre></div></div>

<h3 id="list-all-your-buckets">List all your buckets</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gsutil <span class="nb">ls</span>
</code></pre></div></div>

<p>For more about <strong>gsulit</strong>, please read https://cloud.google.com/storage/docs/gsutil or run:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gsutil <span class="nb">help</span>
</code></pre></div></div>

<hr />

<h2 id="terraform-commands-cheat-sheet">Terraform Commands Cheat Sheet</h2>

<h3 id="switch-the-version-of-terraform-with-tfswitch">Switch the version of Terraform with tfswitch</h3>

<p>Confirm your Terraform version by using:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>terraform version
</code></pre></div></div>

<p>Your output should look like this:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Terraform v0.12.x
</code></pre></div></div>

<p>To switch to the desired version by using a Terraform version manager <strong>tfswitch</strong>, run the following codes to install and configure <code class="highlighter-rouge">tfswitch</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wget https://github.com/warrensbox/terraform-switcher/releases/download/0.7.737/terraform-switcher_0.7.737_linux_amd64.tar.gz
<span class="nb">mkdir</span> <span class="nt">-p</span> <span class="k">${</span><span class="nv">HOME</span><span class="k">}</span>/bin
<span class="nb">tar</span> <span class="nt">-xvf</span> terraform-switcher_0.7.737_linux_amd64.tar.gz <span class="nt">-C</span> <span class="k">${</span><span class="nv">HOME</span><span class="k">}</span>/bin
<span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:<span class="k">${</span><span class="nv">HOME</span><span class="k">}</span>/bin
tfswitch <span class="nt">-b</span> <span class="k">${</span><span class="nv">HOME</span><span class="k">}</span>/bin/terraform 0.11.14
<span class="nb">echo</span> <span class="s2">"0.11.14"</span> <span class="o">&gt;&gt;</span> .tfswitchrc
<span class="nb">exit</span>
</code></pre></div></div>

<h3 id="run-terraform">Run Terraform</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>terraform init
</code></pre></div></div>

<p>The <strong>terraform init</strong> command is used to initialize a working directory containing the Terraform configuration files. This command performs several different initialization steps in order to prepare a working directory for use and is always safe to run multiple times, to bring the working directory up to date with changes in the configuration:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>terraform plan <span class="nt">-out</span><span class="o">=</span>tfplan
</code></pre></div></div>

<p>The <strong>terraform plan</strong> command is used to create an execution plan. Terraform performs a refresh, unless explicitly disabled, and then determines what actions are necessary to achieve the desired state specified in the configuration files. This command is a convenient way to check whether the execution plan for a set of changes matches your expectations without making any changes to real resources or to the state. For example, terraform plan might be run before committing a change to version control, to create confidence that it will behave as expected.</p>

<p>The optional <strong>-out</strong> argument can be used to save the generated plan to a file for later execution with terraform apply.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>terraform apply tfplan
</code></pre></div></div>

<p>The <strong>terraform apply</strong> command is used to apply the changes required to reach the desired state of the configuration, or the pre-determined set of actions generated by a terraform plan execution plan.</p>

<hr />

<h2 id="other-useful-linux-commands">Other useful Linux Commands</h2>

<h3 id="create-a-text-file-with-content">Create a text file with content</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cat</span> <span class="o">&gt;</span> &lt;your-filename&gt; <span class="o">&lt;&lt;</span><span class="no">EOF</span><span class="sh">
/*
text contents
*/
</span><span class="no">EOF
</span></code></pre></div></div>

<p><em>Replace <code class="highlighter-rouge">&lt;your-filename&gt;</code> and <code class="highlighter-rouge">/*text contents*/</code> with yours.</em></p>

<hr />

<p><strong>Related:</strong> <a href="/blog/qwiklabs/Qwiklabs-User-Tips-for-Learning_Google_Cloud_Platform">Learning Google Cloud Platform on Qwiklabs: Learning Map, Assistive Tool and Tips</a></p>

<blockquote>
  <p>This list will be kept updated. If you need more, please leave me your feedback, questions, comments, suggestions below.</p>
</blockquote>
:ET